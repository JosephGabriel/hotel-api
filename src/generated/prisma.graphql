# source: http://localhost:4466
# timestamp: Wed Dec 22 2021 02:11:27 GMT-0300 (Horário Padrão de Brasília)

type AggregateHotel {
  count: Int!
}

type AggregateHotelLocation {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

scalar DateTime

type Hotel implements Node {
  id: ID!
  name: String!
  rating: Int
  summary: String!
  description: String!
  imageCover: String!
  logo: String!
  slug: String!
  location: HotelLocation
}

"""A connection to a list of items."""
type HotelConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [HotelEdge]!
  aggregate: AggregateHotel!
}

input HotelCreateInput {
  id: ID
  name: String!
  rating: Int
  summary: String!
  description: String!
  imageCover: String!
  logo: String!
  slug: String!
  location: HotelLocationCreateOneInput
}

"""An edge in a connection."""
type HotelEdge {
  """The item at the end of the edge."""
  node: Hotel!

  """A cursor for use in pagination."""
  cursor: String!
}

type HotelLocation implements Node {
  id: ID!
  latitude: String!
  longitude: String!
  address: String!
  description: String!
  zipCode: String!
}

"""A connection to a list of items."""
type HotelLocationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [HotelLocationEdge]!
  aggregate: AggregateHotelLocation!
}

input HotelLocationCreateInput {
  id: ID
  latitude: String!
  longitude: String!
  address: String!
  description: String!
  zipCode: String!
}

input HotelLocationCreateOneInput {
  create: HotelLocationCreateInput
  connect: HotelLocationWhereUniqueInput
}

"""An edge in a connection."""
type HotelLocationEdge {
  """The item at the end of the edge."""
  node: HotelLocation!

  """A cursor for use in pagination."""
  cursor: String!
}

enum HotelLocationOrderByInput {
  id_ASC
  id_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
  address_ASC
  address_DESC
  description_ASC
  description_DESC
  zipCode_ASC
  zipCode_DESC
}

type HotelLocationPreviousValues {
  id: ID!
  latitude: String!
  longitude: String!
  address: String!
  description: String!
  zipCode: String!
}

type HotelLocationSubscriptionPayload {
  mutation: MutationType!
  node: HotelLocation
  updatedFields: [String!]
  previousValues: HotelLocationPreviousValues
}

input HotelLocationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [HotelLocationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [HotelLocationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [HotelLocationSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: HotelLocationWhereInput
}

input HotelLocationUpdateDataInput {
  latitude: String
  longitude: String
  address: String
  description: String
  zipCode: String
}

input HotelLocationUpdateInput {
  latitude: String
  longitude: String
  address: String
  description: String
  zipCode: String
}

input HotelLocationUpdateManyMutationInput {
  latitude: String
  longitude: String
  address: String
  description: String
  zipCode: String
}

input HotelLocationUpdateOneInput {
  create: HotelLocationCreateInput
  connect: HotelLocationWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: HotelLocationUpdateDataInput
  upsert: HotelLocationUpsertNestedInput
}

input HotelLocationUpsertNestedInput {
  update: HotelLocationUpdateDataInput!
  create: HotelLocationCreateInput!
}

input HotelLocationWhereInput {
  """Logical AND on all given filters."""
  AND: [HotelLocationWhereInput!]

  """Logical OR on all given filters."""
  OR: [HotelLocationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [HotelLocationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  latitude: String

  """All values that are not equal to given value."""
  latitude_not: String

  """All values that are contained in given list."""
  latitude_in: [String!]

  """All values that are not contained in given list."""
  latitude_not_in: [String!]

  """All values less than the given value."""
  latitude_lt: String

  """All values less than or equal the given value."""
  latitude_lte: String

  """All values greater than the given value."""
  latitude_gt: String

  """All values greater than or equal the given value."""
  latitude_gte: String

  """All values containing the given string."""
  latitude_contains: String

  """All values not containing the given string."""
  latitude_not_contains: String

  """All values starting with the given string."""
  latitude_starts_with: String

  """All values not starting with the given string."""
  latitude_not_starts_with: String

  """All values ending with the given string."""
  latitude_ends_with: String

  """All values not ending with the given string."""
  latitude_not_ends_with: String
  longitude: String

  """All values that are not equal to given value."""
  longitude_not: String

  """All values that are contained in given list."""
  longitude_in: [String!]

  """All values that are not contained in given list."""
  longitude_not_in: [String!]

  """All values less than the given value."""
  longitude_lt: String

  """All values less than or equal the given value."""
  longitude_lte: String

  """All values greater than the given value."""
  longitude_gt: String

  """All values greater than or equal the given value."""
  longitude_gte: String

  """All values containing the given string."""
  longitude_contains: String

  """All values not containing the given string."""
  longitude_not_contains: String

  """All values starting with the given string."""
  longitude_starts_with: String

  """All values not starting with the given string."""
  longitude_not_starts_with: String

  """All values ending with the given string."""
  longitude_ends_with: String

  """All values not ending with the given string."""
  longitude_not_ends_with: String
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  zipCode: String

  """All values that are not equal to given value."""
  zipCode_not: String

  """All values that are contained in given list."""
  zipCode_in: [String!]

  """All values that are not contained in given list."""
  zipCode_not_in: [String!]

  """All values less than the given value."""
  zipCode_lt: String

  """All values less than or equal the given value."""
  zipCode_lte: String

  """All values greater than the given value."""
  zipCode_gt: String

  """All values greater than or equal the given value."""
  zipCode_gte: String

  """All values containing the given string."""
  zipCode_contains: String

  """All values not containing the given string."""
  zipCode_not_contains: String

  """All values starting with the given string."""
  zipCode_starts_with: String

  """All values not starting with the given string."""
  zipCode_not_starts_with: String

  """All values ending with the given string."""
  zipCode_ends_with: String

  """All values not ending with the given string."""
  zipCode_not_ends_with: String
}

input HotelLocationWhereUniqueInput {
  id: ID
}

enum HotelOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  rating_ASC
  rating_DESC
  summary_ASC
  summary_DESC
  description_ASC
  description_DESC
  imageCover_ASC
  imageCover_DESC
  logo_ASC
  logo_DESC
  slug_ASC
  slug_DESC
}

type HotelPreviousValues {
  id: ID!
  name: String!
  rating: Int
  summary: String!
  description: String!
  imageCover: String!
  logo: String!
  slug: String!
}

type HotelSubscriptionPayload {
  mutation: MutationType!
  node: Hotel
  updatedFields: [String!]
  previousValues: HotelPreviousValues
}

input HotelSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [HotelSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [HotelSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [HotelSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: HotelWhereInput
}

input HotelUpdateInput {
  name: String
  rating: Int
  summary: String
  description: String
  imageCover: String
  logo: String
  slug: String
  location: HotelLocationUpdateOneInput
}

input HotelUpdateManyMutationInput {
  name: String
  rating: Int
  summary: String
  description: String
  imageCover: String
  logo: String
  slug: String
}

input HotelWhereInput {
  """Logical AND on all given filters."""
  AND: [HotelWhereInput!]

  """Logical OR on all given filters."""
  OR: [HotelWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [HotelWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  rating: Int

  """All values that are not equal to given value."""
  rating_not: Int

  """All values that are contained in given list."""
  rating_in: [Int!]

  """All values that are not contained in given list."""
  rating_not_in: [Int!]

  """All values less than the given value."""
  rating_lt: Int

  """All values less than or equal the given value."""
  rating_lte: Int

  """All values greater than the given value."""
  rating_gt: Int

  """All values greater than or equal the given value."""
  rating_gte: Int
  summary: String

  """All values that are not equal to given value."""
  summary_not: String

  """All values that are contained in given list."""
  summary_in: [String!]

  """All values that are not contained in given list."""
  summary_not_in: [String!]

  """All values less than the given value."""
  summary_lt: String

  """All values less than or equal the given value."""
  summary_lte: String

  """All values greater than the given value."""
  summary_gt: String

  """All values greater than or equal the given value."""
  summary_gte: String

  """All values containing the given string."""
  summary_contains: String

  """All values not containing the given string."""
  summary_not_contains: String

  """All values starting with the given string."""
  summary_starts_with: String

  """All values not starting with the given string."""
  summary_not_starts_with: String

  """All values ending with the given string."""
  summary_ends_with: String

  """All values not ending with the given string."""
  summary_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  imageCover: String

  """All values that are not equal to given value."""
  imageCover_not: String

  """All values that are contained in given list."""
  imageCover_in: [String!]

  """All values that are not contained in given list."""
  imageCover_not_in: [String!]

  """All values less than the given value."""
  imageCover_lt: String

  """All values less than or equal the given value."""
  imageCover_lte: String

  """All values greater than the given value."""
  imageCover_gt: String

  """All values greater than or equal the given value."""
  imageCover_gte: String

  """All values containing the given string."""
  imageCover_contains: String

  """All values not containing the given string."""
  imageCover_not_contains: String

  """All values starting with the given string."""
  imageCover_starts_with: String

  """All values not starting with the given string."""
  imageCover_not_starts_with: String

  """All values ending with the given string."""
  imageCover_ends_with: String

  """All values not ending with the given string."""
  imageCover_not_ends_with: String
  logo: String

  """All values that are not equal to given value."""
  logo_not: String

  """All values that are contained in given list."""
  logo_in: [String!]

  """All values that are not contained in given list."""
  logo_not_in: [String!]

  """All values less than the given value."""
  logo_lt: String

  """All values less than or equal the given value."""
  logo_lte: String

  """All values greater than the given value."""
  logo_gt: String

  """All values greater than or equal the given value."""
  logo_gte: String

  """All values containing the given string."""
  logo_contains: String

  """All values not containing the given string."""
  logo_not_contains: String

  """All values starting with the given string."""
  logo_starts_with: String

  """All values not starting with the given string."""
  logo_not_starts_with: String

  """All values ending with the given string."""
  logo_ends_with: String

  """All values not ending with the given string."""
  logo_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  location: HotelLocationWhereInput
}

input HotelWhereUniqueInput {
  id: ID
}

"""Raw JSON value"""
scalar Json

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createHotel(data: HotelCreateInput!): Hotel!
  createHotelLocation(data: HotelLocationCreateInput!): HotelLocation!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateHotel(data: HotelUpdateInput!, where: HotelWhereUniqueInput!): Hotel
  updateHotelLocation(data: HotelLocationUpdateInput!, where: HotelLocationWhereUniqueInput!): HotelLocation
  deleteUser(where: UserWhereUniqueInput!): User
  deleteHotel(where: HotelWhereUniqueInput!): Hotel
  deleteHotelLocation(where: HotelLocationWhereUniqueInput!): HotelLocation
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertHotel(where: HotelWhereUniqueInput!, create: HotelCreateInput!, update: HotelUpdateInput!): Hotel!
  upsertHotelLocation(where: HotelLocationWhereUniqueInput!, create: HotelLocationCreateInput!, update: HotelLocationUpdateInput!): HotelLocation!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyHotels(data: HotelUpdateManyMutationInput!, where: HotelWhereInput): BatchPayload!
  updateManyHotelLocations(data: HotelLocationUpdateManyMutationInput!, where: HotelLocationWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyHotels(where: HotelWhereInput): BatchPayload!
  deleteManyHotelLocations(where: HotelLocationWhereInput): BatchPayload!
  executeRaw(database: PrismaDatabase, query: String!): Json!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum PrismaDatabase {
  default
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  hotels(where: HotelWhereInput, orderBy: HotelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Hotel]!
  hotelLocations(where: HotelLocationWhereInput, orderBy: HotelLocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [HotelLocation]!
  user(where: UserWhereUniqueInput!): User
  hotel(where: HotelWhereUniqueInput!): Hotel
  hotelLocation(where: HotelLocationWhereUniqueInput!): HotelLocation
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  hotelsConnection(where: HotelWhereInput, orderBy: HotelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): HotelConnection!
  hotelLocationsConnection(where: HotelLocationWhereInput, orderBy: HotelLocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): HotelLocationConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  hotel(where: HotelSubscriptionWhereInput): HotelSubscriptionPayload
  hotelLocation(where: HotelLocationSubscriptionWhereInput): HotelLocationSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  lastname: String!
  password: String!
  passwordChangedAt: DateTime
  username: String!
  email: String!
  createdAt: DateTime
  updatedAt: DateTime
  verified: Boolean!
  active: Boolean!
  role: UserRole!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  lastname: String!
  password: String!
  passwordChangedAt: DateTime
  username: String!
  email: String!
  verified: Boolean
  active: Boolean
  role: UserRole
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  lastname_ASC
  lastname_DESC
  password_ASC
  password_DESC
  passwordChangedAt_ASC
  passwordChangedAt_DESC
  username_ASC
  username_DESC
  email_ASC
  email_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  verified_ASC
  verified_DESC
  active_ASC
  active_DESC
  role_ASC
  role_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  lastname: String!
  password: String!
  passwordChangedAt: DateTime
  username: String!
  email: String!
  createdAt: DateTime
  updatedAt: DateTime
  verified: Boolean!
  active: Boolean!
  role: UserRole!
}

enum UserRole {
  USER
  ADMIN
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  lastname: String
  password: String
  passwordChangedAt: DateTime
  username: String
  email: String
  verified: Boolean
  active: Boolean
  role: UserRole
}

input UserUpdateManyMutationInput {
  name: String
  lastname: String
  password: String
  passwordChangedAt: DateTime
  username: String
  email: String
  verified: Boolean
  active: Boolean
  role: UserRole
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  lastname: String

  """All values that are not equal to given value."""
  lastname_not: String

  """All values that are contained in given list."""
  lastname_in: [String!]

  """All values that are not contained in given list."""
  lastname_not_in: [String!]

  """All values less than the given value."""
  lastname_lt: String

  """All values less than or equal the given value."""
  lastname_lte: String

  """All values greater than the given value."""
  lastname_gt: String

  """All values greater than or equal the given value."""
  lastname_gte: String

  """All values containing the given string."""
  lastname_contains: String

  """All values not containing the given string."""
  lastname_not_contains: String

  """All values starting with the given string."""
  lastname_starts_with: String

  """All values not starting with the given string."""
  lastname_not_starts_with: String

  """All values ending with the given string."""
  lastname_ends_with: String

  """All values not ending with the given string."""
  lastname_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  passwordChangedAt: DateTime

  """All values that are not equal to given value."""
  passwordChangedAt_not: DateTime

  """All values that are contained in given list."""
  passwordChangedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  passwordChangedAt_not_in: [DateTime!]

  """All values less than the given value."""
  passwordChangedAt_lt: DateTime

  """All values less than or equal the given value."""
  passwordChangedAt_lte: DateTime

  """All values greater than the given value."""
  passwordChangedAt_gt: DateTime

  """All values greater than or equal the given value."""
  passwordChangedAt_gte: DateTime
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  verified: Boolean

  """All values that are not equal to given value."""
  verified_not: Boolean
  active: Boolean

  """All values that are not equal to given value."""
  active_not: Boolean
  role: UserRole

  """All values that are not equal to given value."""
  role_not: UserRole

  """All values that are contained in given list."""
  role_in: [UserRole!]

  """All values that are not contained in given list."""
  role_not_in: [UserRole!]
}

input UserWhereUniqueInput {
  id: ID
  username: String
  email: String
}
